'use strict';

const sql = require('sqlite3');
const path = require('path');
const fs = require('fs');
const aws = require('aws-sdk');
const template = require('site-template');
const buildHTML = require('build-html');

const s3 = new aws.S3({ region: 'us-east-1' });

const writePosts = data =>
  new Promise((done, reject) => {
    const { title, html, perma, desc } = buildHTML('post', data);

    const params = {
      Bucket: process.env.bucket,
      Body: template(title, desc, html, perma),
      ContentType: 'text/html',
      Key: `writing/${perma}`,
    };

    s3.putObject(params, (err, uploadData) => {
      if (err) {
        reject(err);
      }

      if (uploadData) {
        done(uploadData);
      }
    });
  });

const renderPosts = (event, context, cb) => {
  const posts = [];

  s3.getObject(
    {
      Bucket: 'ams-admin',
      Key: 'BLOG',
    },
    (err, data) => {
      if (err) {
        cb(err);
      }

      fs.writeFileSync('/tmp/BLOG', data.Body);
      const dbFile = path.join('/tmp/BLOG');
      const db = new sql.Database(dbFile);
      db.all('SELECT * from posts', (e, d) =>
        d.forEach(x => posts.push(writePosts(x)))
      );

      Promise.all(posts)
        .then(() => cb(null, 'posts built!'))
        .catch(promiseErr => cb(`error ${promiseErr}`));
    }
  );
};

module.exports = renderPosts;
